{
  "openapi": "3.0.1",
  "info": {
    "title": "ImmRequest",
    "version": "v2"
  },
  "paths": {
    "/api/Administrator/{id}": {
      "get": {
        "tags": [
          "Administrator"
        ],
        "summary": "Permite a un administrador obtener información de cualquier administrador del sistema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Este parámetro contiene el identificador del administrador",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el identificador del administrador",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se devuelve la información requerida."
          },
          "400": {
            "description": "Administrador no existente."
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      },
      "put": {
        "tags": [
          "Administrator"
        ],
        "summary": "Permite a un administrador actualizar información de otro administrador en el sistema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Este parámetro contiene el identificador del administrador",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el identificador del administrador",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "requestBody": {
          "description": "Este modelo contiene la información a actualizar del administrador",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdministratorModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdministratorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdministratorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdministratorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Se actualizó información del administrador"
          },
          "400": {
            "description": "Error. No se actualizó información del administrador"
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      },
      "delete": {
        "tags": [
          "Administrator"
        ],
        "summary": "Permite a un administrador borrar otro administrador del sistema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Este parámetro contiene el identificador del administrador",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el identificador del administrador",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se borró el administrador del sistema"
          },
          "400": {
            "description": "Error. No se pudo borrar al administrador"
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      }
    },
    "/api/Administrator": {
      "get": {
        "tags": [
          "Administrator"
        ],
        "summary": "Permite a un administrador obtener información de todos los administradores del sistema",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se devuelve la información requerida."
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      },
      "post": {
        "tags": [
          "Administrator"
        ],
        "summary": "Permite a un administrador crear otro administrador en el sistema",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "requestBody": {
          "description": "Este modelo contiene la información del administrador",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdministratorModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdministratorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdministratorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdministratorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Se creó el administrador"
          },
          "400": {
            "description": "Error. No se creó el administrador"
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      }
    },
    "/api/CitizenRequest": {
      "post": {
        "tags": [
          "CitizenRequest"
        ],
        "summary": "Permite al usuario ingresar una solicitud al sistema",
        "requestBody": {
          "description": "Este modelo contiene la información acerca de la solicitud",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CitizenRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CitizenRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CitizenRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CitizenRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Se creó la solicitud con éxito"
          },
          "400": {
            "description": "Error. No se creó la solicitud"
          }
        }
      },
      "get": {
        "tags": [
          "CitizenRequest"
        ],
        "summary": "Permite al administrador obtener todas las solicitudes del sistema.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se devuelve la solicitud requerida."
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      }
    },
    "/api/CitizenRequest/{requestId}": {
      "get": {
        "tags": [
          "CitizenRequest"
        ],
        "summary": "Permite al administrador obtener una solicitud existente en el sistema",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Este parámetro contiene el número de la solicitud existente",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el número de la solicitud existente",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se devuelve la solicitud requerida."
          },
          "400": {
            "description": "La solicitud no ha sido encontrada."
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      },
      "put": {
        "tags": [
          "CitizenRequest"
        ],
        "summary": "Permite al administrador actualizar el status de una solicitud existente en el sistema",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Este parámetro contiene el número de la solicitud existente",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el número de la solicitud existente",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "requestBody": {
          "description": "Este parámetro contiene el nuevo status que debe tener la solicitud",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "La solicitud requerida fue actualizada."
          },
          "400": {
            "description": "Status no existe o error en el sistema."
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      }
    },
    "/api/CitizenRequest/Status/{requestId}": {
      "get": {
        "tags": [
          "CitizenRequest"
        ],
        "summary": "Permite a un usuario obtener el status de su solicitud",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Este parámetro contiene el número del solicitud existente",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el número del solicitud existente",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se devuelve el status de la solicitud."
          },
          "400": {
            "description": "La solicitud no ha sido encontrada."
          }
        }
      }
    },
    "/api/CitizenRequest/Areas": {
      "get": {
        "tags": [
          "CitizenRequest"
        ],
        "summary": "Permite a un usuario obtener todas las áreas del sistema",
        "responses": {
          "200": {
            "description": "Se devuelven las áreas existentes en el sistema."
          }
        }
      }
    },
    "/api/CitizenRequest/Topics/{parentAreaId}": {
      "get": {
        "tags": [
          "CitizenRequest"
        ],
        "summary": "Permite a un usuario obtener todas los temas de un área del sistema.",
        "parameters": [
          {
            "name": "parentAreaId",
            "in": "path",
            "description": "Este parámetro contiene el número de área al cual los temas pertenecen",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el número de área al cual los temas pertenecen",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se devuelven los temas para el área en el sistema."
          }
        }
      }
    },
    "/api/Importer": {
      "post": {
        "tags": [
          "Importer"
        ],
        "summary": "Permite a un administrardor realizar ingresar nuevas areas usando un importador dado.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "importer": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "importer": {
                  "style": "form"
                },
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      },
      "get": {
        "tags": [
          "Importer"
        ],
        "summary": "Retorna la lista de importadores en el sistema.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      }
    },
    "/api/Reports/RequestSummary": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Retorna la cantidad de solicitudes por estado realizadas por un mismo usuario en un rango de \r\nfechas.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestBodyModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestBodyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestBodyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestBodyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      }
    },
    "/api/Reports/TypesSummary": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Retorna los tipos más usados en las solicitudes en un rango de fechas.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestBodyModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestBodyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestBodyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestBodyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      }
    },
    "/api/Session": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Permite a un administrador loguearse al sistema.",
        "requestBody": {
          "description": "Este modelo contiene la información para iniciar sesión",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SessionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SessionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Se inició sesión con éxito"
          },
          "400": {
            "description": "Error. No se pudo iniciar sesión."
          }
        }
      },
      "delete": {
        "tags": [
          "Session"
        ],
        "summary": "Permite a un administrador cerrar sesión en el sistema.",
        "responses": {
          "200": {
            "description": "Se cerró sesión con éxito"
          },
          "400": {
            "description": "Error. No se pudo cerrar la sesión."
          }
        }
      }
    },
    "/api/Type/{parentTopicID}": {
      "post": {
        "tags": [
          "Type"
        ],
        "summary": "Permite a un usuario crear un tipo de solicitud especificando su tema.",
        "parameters": [
          {
            "name": "parentTopicID",
            "in": "path",
            "description": "Este parámetro contiene el identificador del tema",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el identificador del tema",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "requestBody": {
          "description": "Este modelo contiene la información del nuevo tipo.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Se creó el tipo con éxito"
          },
          "400": {
            "description": "Error. No se pudo crear el tipo."
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      }
    },
    "/api/Type/{id}": {
      "get": {
        "tags": [
          "Type"
        ],
        "summary": "Permite a un usuario obtener un tipo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Este parámetro contiene el identificador del tipo en el sistema",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el identificador del tipo en el sistema",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se obtuvo el tipo con éxito"
          },
          "400": {
            "description": "Error. No se pudo obtener el tipo."
          }
        }
      },
      "delete": {
        "tags": [
          "Type"
        ],
        "summary": "Permite a un usuario borrar un tipo del sistema.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Este parámetro contiene el identificador del tipo en el sistema",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el identificador del tipo en el sistema",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se borró el tipo del sistema"
          },
          "400": {
            "description": "Error. No se pudo borrar al tipo"
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      },
      "put": {
        "tags": [
          "Type"
        ],
        "summary": "Permite a un usuario actualizar la información de un tipo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Este parámetro contiene el identificador del tipo en el sistema",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Este parámetro contiene el identificador del tipo en el sistema",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "Guid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Se actualizó el tipo con éxito"
          },
          "400": {
            "description": "Error. No se pudo actualizar el tipo."
          },
          "403": {
            "description": "Token invalido o vacio"
          }
        }
      }
    },
    "/api/Type": {
      "get": {
        "tags": [
          "Type"
        ],
        "summary": "Permite a un usuario obtener todos los tipos del sistema.",
        "responses": {
          "200": {
            "description": "Se borró el administrador del sistema"
          }
        }
      }
    },
    "/api/Type/All/{parentTopicId}": {
      "get": {
        "tags": [
          "Type"
        ],
        "parameters": [
          {
            "name": "parentTopicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdministratorModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "RequestFieldValuesModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "parentCitizenRequestId": {
            "type": "integer",
            "format": "int64"
          },
          "fieldId": {
            "type": "integer",
            "format": "int64"
          },
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CitizenRequestModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "citizenName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "areaName": {
            "type": "string",
            "nullable": true
          },
          "topicName": {
            "type": "string",
            "nullable": true
          },
          "topicTypeName": {
            "type": "string",
            "nullable": true
          },
          "areaId": {
            "type": "integer",
            "format": "int64"
          },
          "topicId": {
            "type": "integer",
            "format": "int64"
          },
          "topicTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestFieldValuesModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusModel": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          }
        },
        "additionalProperties": false
      },
      "ReportRequestBodyModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SessionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DataType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "BaseFieldModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "multipleValues": {
            "type": "boolean"
          },
          "rangeValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dataType": {
            "$ref": "#/components/schemas/DataType"
          }
        },
        "additionalProperties": false
      },
      "TypeModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseFieldModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}